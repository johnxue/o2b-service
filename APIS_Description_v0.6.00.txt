预售平台核心URI V0.5.10
==============================

# 最后一次更新时间：2014.9.16

1. 概述(略)
2. 开发环境说明
2.1 Mysql 环境说明:
    ip/port: 192.168.1.210:3306
    数据库名：o2b
    开发用账号：root/123456

2.2 Redis 说明：
    ip/prot: 192.168.1.210:6375
    数据库：12
    密码：jct2014redis

2.3 Key & Secret 说明
    App_Key=fb98ab9159f51fd0
    App_Secret=09f7c8cba635f7616bc131b0d8e25947
    app_key放置在每一个http请求的header（app_key）中，每一个URI必须要验证app_key的合法性；
    app_secret只用于登录验证，放在登录请求的header(app_secret)中。

3. 错误码说明 (持续更新中...)
   错误码用于URI的错误信息返回，其中code是业务层级的定议，status为http对应的status,message是错误说明，help_document是错误说明指引URI
   其中：
   code = 600-699 -->  鉴权类错误
   code = 700-799 -->  数据库类错误
   code = 800-899 -->  业务类错误
   code = 900     -->  未被定义的错误类型

   具体错误代码定义如下：

errorDic={
        900 : {
                "code": "900",
                "status": 500,
                "message": "未被定义的错误类型",
                "help_document": "/oauth/v1.0.0/help/900"
        },
        601: {
            "code": "601",
            "status":401,
            "message": "未经过JctOAuth授权的第三方应用",
            "help_document": "/oauth/v1.0.0/help/601"
        },
        602: {
            "code": "602",
            "status":401,
            "message": "未登录授权的应用",
            "help_document": "/oauth/v1.0.0/help/602"
        },
        603: {
            "code": "603",
            "status":404,
            "message": "无法识别的用户名或密码",
            "help_document": "/oauth/v1.0.0/help/603"
        },                  
        701: {
              "code": "701",
              "status":500,
              "message": "数据库连接失败",
              "help_document": "/oauth/v1.0.0/help/701"
        },
        702: {
                      "code": "702",
                      "status":500,
                      "message": "无法从链接池中获得数据库连接",
                      "help_document": "/oauth/v1.0.0/help/702"
        },        
        703: {
              "code": "703",
              "status":500,
              "message":"SQL 语句执行失败(I)",
              "help_document":"/oauth/v1.0.0/help/703"
        },
        704: {
              "code": "704",
              "status":500,
              "message":"SQL 语句执行失败(D)",
              "help_document":"/oauth/v1.0.0/help/704"
        },
        705: {
              "code": "705",
              "status":500,
              "message":"SQL 语句执行失败(U)",
              "help_document":"/oauth/v1.0.0/help/705"
        },
        706: {
              "code": "706",
              "status":500,
              "message":"SQL 语句执行失败(S)",
              "help_document":"/oauth/v1.0.0/help/706"
        },
        707: {
              "code": "707",
              "status":500,
              "message":"SQL 语句执行失败(C)",
              "help_document":"/oauth/v1.0.0/help/707"
        },
        801: {
              "code": "801",
              "status":400,
              "message":"参数列表错误",
              "help_document":"/o2b/v1.0.0/help/801"
        },
        802 : {
            "code": "802",
            "status":404,
            "message":"没有找到数据",
            "help_document":"/o2b/v1.0.0/help/802"
        },
        811 : {
            "code"          : "811",
            "status"        : 400,
            "message"       : "未知的图片格式（从文件后缀上判断）",
            "help_document" : "/o2b/v1.0.0/help/811"
        },
        812 : {
                    "code"          : "812",
                    "status"        : 400,
                    "message"       : "未知的图片格式",
                    "help_document" : "/o2b/v1.0.0/help/811"
        },        
        813 : {
            "code"          : "813",
            "status"        : 400,
            "message"       : "值得怀疑的图片(非法图片格式)",
            "help_document" : "/o2b/v1.0.0/help/812"
        },
        814 : {
            "code"          : "814",
            "status"        : 400,
            "message"       : "图片长宽超界",
            "help_document" : "/o2b/v1.0.0/help/813"
        }             
}


4. URI说明
4.1 认证
4.1.1 注册

4.1.2 登录认证
URI: https://192.168.1.210/o2b/v1.0.0/login/$url/$dataPacket
输入：
      http header：app_secret
      url: 必填 - 即网站URL，从浏览器地址栏中获得
      dataPacket:必填，通过加密算法获得
输出：

     http header：Authorization [token]
    {
      登录后需要返回的信息，目前还没有想好
    }

4.1.3. 登出
URI: https://192.168.1.210/o2b/v1.0.0/logout
注：$userid从Token中获得
输入：
     方法:Delete
     http header：Authorization

输出：http status : 204 操作成功，无返回
      无



4.1.5 Token心跳
URI: https://192.168.1.210/o2b/v1.0.0/service/heartbeat
注：$userid从Token中获得
输入：
     方法:patch
     http header：Authorization

输出：http status : 201 操作成功
返回:1800,即token时效秒数



4.2 产品信息

4.2.1. 获得查询条件：
    URI: https://192.168.1.210/o2b/v1.0.0/product/attribute 
    输出：
              {
                 "attribute": [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
                 "category" : [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
                 "sort"     : [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ]
              }
 

4.2.2 获得产品列表
  URI: https://192.168.1.210/o2b/v1.0.0/product
  输入：
  o = 起始页                  [可选]
  r = 每页行数                [可选]
  s =attribute|category|sort  [可选,取值根据 /o2b/v1.0.0/product/attribute json的Key值]
  v =排序条件                  [可选，取值根据 /o2b/v1.0.0/product/attribute json的value值]
  q =模糊查询条件              [可选，多查询关键字用 "+" 隔开]
  输出：
              {
                 product : [$pid,$code,$categoryCode,$name,$image,$starttime,$endTime,$statusCode,$status,
                            $totalTopic,$totalFollow,$totalSold,$totalAmount)],...]
              }

  例1： 输出所有产品列表（默认只显示前1000条记录）
  https://192.168.1.210/o2b/v1.0.0/product

  例2： 输出第2页，共50项产品列表 
  https://192.168.1.210/o2b/v1.0.0/product?o=1&r=50

  例3： 输出最新上互产品，第1页，共20项产品列表,
  https://192.168.1.210/o2b/v1.0.0/product?o=0&r=20&s=sort&v=updatetime

  例4： 查询所有与“睡眠”和“灯”有关的产品
  https://192.168.1.210/o2b/v1.0.0/product?o=0&r=20&q=睡眠+灯

4.2.3. 获得产品详细信息
   URI: https://192.168.1.210/o2b/v1.0.0/product/$pid
   
   输出：
              {
                 'pid' : '123456',
                 ...
                 html : 'html...'
              }


4.3 产品关注

4.3.1 用户关注产品
URI: https://192.168.1.210/o2b/v1.0.0/product/$product_code/follow

输入：
     http header：Authorization
     方法:POST
     参数:
     follow=$uid    [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
输出：http status : 201
     {
       'code': 'xxxx'
       'follow': xxxx
     }


4.3.2. 用户取消关注产品
输入：https://192.168.1.210/o2b/v1.0.0/product/$product_code/follow

     http header：Authorization
     方法:DELETE 
     参数:
     unfollow=$uid    [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
输出： http status : 201
     {
       'code': 'xxxx'   #产品编号
       'follow': xxxx   #关注数
     }

4.3.3. 某一产品当前用户是否关注
URI: https://192.168.1.210/o2b/v1.0.0/product/$product_code/follow
输入：
     http header：Authorization
     方法:GET
     参数:
     $uid    [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
输出： http status : 200
     {
       'code'  : 'xxxx'        #产品编号
       'follow': xxxx          #关注数
       '$user' : 'YES'|'NO'    #关注为YES,NO为未关注
     }



4.4 购物车
4.4.1 得到某用户的购物车
URI: https://192.168.1.210/o2b/v1.0.0/shoppingcart
输入：
     http header：Authorization
     方法:GET
          
输出：
    {
       user         : 'xxxxx',
       shoppingcart : [ 
                        [$id,$pId,$pCode,$name,$OriginalPrice,$CurrentPrice,$number,$available,$offline,$image],
                        ...
                        [$id,$pId,$pCode,$name,$OriginalPrice,$CurrentPrice,$number,$available,$offline,$image]
                      ]
    }
注：这里传回来的image是小图，在产品名称中image=img+'-'+产品编码+'-'+[small|medium|large|banner]+'.jpg'


4.4.2 加入购物车
URI: https://192.168.1.210/o2b/v1.0.0/shoppingcart
输入：
     http header：Authorization
     方法:POST
     参数:
     {
	pid,pcode,number
     }
          
输出：
    {
       user: 'xxxxx',
       address : [ [list],[list]..[list] ]
    }


4.4.3. 更改购物车数量
URI: https://192.168.1.210/o2b/v1.0.0/shoppingcart
输入：
     http header：Authorization
     方法:patch
     patch json 对象:{id,number}
注： id     - 购物车id
     number - 定购数量
例： https://192.168.1.210/o2b/v1.0.0/shoppingcart
     patch数据：
     {
       "id" : 18,
       "number" : 1
     }

输出：http status : 204 操作成功，无返回

4.4.4. 删除购物车商品
URI: https://192.168.1.210/o2b/v1.0.0/shoppingcart
输入：
     http header：Authorization
     方法:delete
     参数:
     {
	"ids":"$id1,$id2,$id3,....,$idn"
     }
输出：http status : 204 操作成功，无返回


4.5 订单
4.5.1 结算-生成定单
URI: https://192.168.1.210/o2b/v1.0.0/order
输入：
     http header：Authorization
     方法:post
     参数:
     {
	"user"      : "xxxx",
        "aId"       : 00,
        "payment"   : "00",
        "shipping"  : "00",
        "freight"   : 0,
        "total"     : 0,
        "amount"    : 0,
        "comment"   : "xxxxx"
	"order" : {
              [{pid,pcode,name,price,oPrice,number}],
              ...
              [{pid,pcode,name,price,oPrice,number}]
        }
      }

注:  user         - 用户 ,
     aId          - 地址id ,
     payment      - 付款方式id
     pid          - 产品id
     pcode        - 产品编码
     name         - 产品名称
     price        - 当前价格
     OPrice       - 原价
     shipping     - 运送方式
     freight      - 运费,
     number       - 数量
     total        - 总数
     amount       - 总金额（不含运费）
     comment      - 备注
     

输出：http status : 201 操作成功
    {
       "user"    : "用户名",
       "orderId" : 订单id，
       "orderNo" : 订单号，
       "amount"  : 总金额，（含运费）
       "payment" : 付款方式id 
    }


4.5.2 查看定单例表
URI: https://192.168.1.210/o2b/v1.0.0/order
输入：
     http header：Authorization
     方法:get

    o = 起始页                  [可选]
    r = 每页行数                [可选]
    s = 查询项目                [可选, status|period| ... ]
    v = 查询条件                [可选，period的取值根据 /o2b/v1.0.0/order/attribute json的code值]
    q =模糊查询条件              [可选，多查询关键字用 "+" 隔开,只能按订单号及物品名称查询]

输出：http status : 200
{
    "User": "用户名",
    "OrderList": [
        [$id,$orderNo,$orderDate,$contact,$total,$amount,$payment,$status,[$imgs,...],
        ...
     ]
}


4.5.3 查看订单详情
URI: https://192.168.1.210/o2b/v1.0.0/order/$oid
输入：
     http header：Authorization
     方法:get
输出：
{
          'User'       :"xxxx@mail.com",
	  "OrderInfo": {
               "oid"       : 订单ID,
               "orderNo"   : "订单号",
               "orderDate" : "订单生成时间",
               "status"    : "订单状态",
               "total"     : 总数量,
               "amount"    : 总金额
	       "payment"   : "付款方式",
          },
          "AddressInfo": {
	       "contact" : "联系人",
	       "mobile"  : "手机号",
	       "address" : "详细地址",
	       "zipcode" : "邮编",
	       "tel"     : "固话",
	       "email"   : "电子邮件"
	  },
	  'OrderDetail':[[$订单ID,$产品图片,$产品编码,$产品名称,$购买数量,$购买时单价 ,$金额],...]
        }


4.5.4. 删除交易完成类订单
URI: https://192.168.1.210/o2b/v1.0.0/order
输入：
     http header：Authorization
     方法:delete
     参数:
     {
	"ids":"$id1,$id2,$id3,....,$idn"
     }
输出：http status : 204 只要有一个删除成功，即返回状态码204操作成功，无返回
     http status : 404 没有找到删除订单
注：前提是订单必须处于交易完成状态，如交易关闭，交易完成，已退款。


4.5.5. 取消未发货订单
URI: https://192.168.1.210/o2b/v1.0.0/order/$id
输入：
     http header：Authorization
     方法:delete
     
输出：http status : 204 操作成功，无返回


4.5.6. 退换货申请
URI: https://192.168.1.210/o2b/v1.0.0/order/returns
输入：
     http header：Authorization
     方法:post
     参数:
     {
	  "oid" :订单id,
	  "orderNo":"订单号",
	  "pcode":"产品编码",
	  "pname":"产品名称",
	  "number":退换货数量,
	  "mode":"类型[T|H|X]",
	  "description":"商品缺陷说明",
	  "imgProblem":"上传图片"
     }
输出：http status : 201 操作成功
{
    "orderId"     : 订单id,
    "orderNo"     : "订单号",
    "user"        : "登录用户名",
    "swapOrderNo" : "退换货单号"
}


4.5.6. 退货根据照片上传
URI: https://192.168.1.210/o2b/v1.0.0/order/returns/uploadfile

输入：
     http header：Authorization
     方法:post
     参数:
     
        type        = "order.returns",
	code        = "产品编码",
	orderid     = "订单号",
   

限制 : 图片最大不能超过4M
输出： http status : 201
{
"path":"文件所在的路径",
"filename": "文件名"
}
  
注： type   ： 必须为 order.returns 
    code    : 产品编码
    orderid : 订单id
    

4.5.7. 退换货状态查询
URI: https://192.168.1.210/o2b/v1.0.0/order/returns/$swid
输入：
     http header：Authorization
     方法:get
输出：
{ "swapOrder":[
    [$id,$swapOrderNo,$orderNo,$oid,$pcode,$pname,$number,$mode,$description,$createTime,$updateTime,$status,$comment],
    ...
   ]
}

注：
$id - 退换货id
$swapOrderNo - 退换货单号
              {
                 "attribute": [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
                 "category" : [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
                 "sort"     : [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ]
              }
 
$orderNo     - 订单号
$oid         - 订单id
$pcode       - 产品代码
$pname       - 产品名称
$number      - 退换货数量
$mode        - 退换货方式:退货|换货|维修
$description - 问题描述
$createTime  - 退换货申请时间
$updateTime  - [商家答复|状态变更]时间
$status      - 处理状态
$comment     - 商家备注


4.5.8 获得订单配送方式、支付方式、按日期查询的区间代码、按订单状态查询的代码 
URI: https://192.168.1.210/o2b/v1.0.0/order/attribute
输入：
     http header：Authorization
     方法:get
输出：
              {
                 "payment": [ ["描述","代码","说明"],["描述","代码","说明"],...["描述","代码","说明"] ], 
                 "delivery" : [ ["描述","代码","说明"],["描述","代码","说明"],...["描述","代码","说明"] ],
		 "period":[ ["描述","代码"],["描述","代码"],...["描述","代码"] ],
		 "status":[ ["描述","代码"],["描述","代码"],...["描述","代码"] ]
              }
注：payment - 付款方式
   delivery - 配送方式
   period   - 日期区间
   status   - 订单状态 



4.6 地址库
4.6.1 得到地区列表
URI: https://192.168.1.210/o2b/v1.0.0/area
输入：
     方法:GET
     参数：[s|p|c|d]
            s = 国家                    [可选]
            p = 省                      [可选]
            c = 城市                    [可选]
            d = 区县                    [可选]
输出：
              {
                 'province|city|district' : [$area_id,$area_name],[$area_id,$area_name]...[$area_id,$area_name]]
              }
  注：area_id   = 编号
      area_name = 地区名称 


例1：得到国内的所有省
https://192.168.1.210/o2b/v1.0.0/area

例2：得到国内某省下面的所有市
https://192.168.1.210/o2b/v1.0.0/area?p=130000

例3：得到国内某市下面的所有区/县
https://192.168.1.210/o2b/v1.0.0/area?c=131000


4.6.2 得到用户的所有地址
URI: https://192.168.1.210/o2b/v1.0.0/address
输入：
     http header：Authorization
     方法:GET
     参数:
     {
          user=$uid,    # [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
     }
          
输出：
    {
       user: 'xxxxx',
       address : [ [$id,$user,$contact,$tel,$mobile,$email,$province,$city,$area,$street,$address,$isDefault],
                   [list]
                   ..
                   [list]
                 ]
    }
注：id - 地址Id
    user      - 用户名
    contact   - 联系人
    tel       - 电话
    mobile    - 手机
    email     -  邮件
    province  - 省
    city      - 市
    area      - 县/区
    street    - 街道
    address   -  地址
    isDefault - 是否是默认地址


4.6.3. 添加新地址
URI: https://192.168.1.210/o2b/v1.0.0/address
输入：
     http header：Authorization
     方法:POST 
     参数:
     {
          user=$uid,    # [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
          c,            # contact - 联系人，不能为空
          t,            # tel - 固定电话
          m,            # mobile -联系人手机，不能为空
          e,            # email - 联系人邮箱
          pi            # provinceId - 省id，不能为空
          ci,           # cityId - 市id, 不能为空
          ai,           # areaId - 区/县id , 不能为空
          s ,           # street - 街道 
          a ,           # address - 详细地址
          z ,           # zipcode - 邮政编码
          i ,           # isDefault - 是否是默认地址,默认值为N
     }
          

输出：http status : 201
     {
       'user':    'xxxx',
       'address' : id     # 地址id
     }


4.6.4. 删除地址
URI: https://192.168.1.210/o2b/v1.0.0/address/$id
输入：
     http header：Authorization
     方法:DELETE
     参数:
     {
          user=$uid,    # [$uid，可以为空，如果$uid为空，后台处理$uid时将从Token中获得
     }
          
输出：http status : 204 操作成功，无返回
      无


4.6.5. 设置默认地址
URI: https://192.168.1.210/o2b/v1.0.0/address/$id
输入：http status : 204
     http header：Authorization
     方法:patch

          
输出：http status : 204 操作成功，无返回


4.7 新闻
4.7.1 获得新闻列表
  URI: https://192.168.1.210/o2b/v1.0.0/news
  输入方法： GET
  查询参数：
  o = 起始页                  [可选]
  r = 每页行数                [可选]
  输出：
              {
                 "news" : [
                     [$id,$title,$author,$source,$summary,$createTime,$CTR],
                     ...
                 ]
              }

 注：$id  - 新闻ID
     $title      - 新闻标题
     $author     - 新闻作者
     $source     - 新闻来源
     $summary    - 新闻摘要
     $createTime - 时间
     $CTR        - 点击率


4.7.2. 获得新闻详情
  URI: https://192.168.1.210/o2b/v1.0.0/news/$id
  输入方法：GET
  输出：
              {
                 "id"         ： 新闻id,
                 "title"      : '新闻标题',
                 "author"     : '作者',
                 "source"     : '新闻来源',
                 "createTime" : '时间',
                 "htmContent" : '新闻内容',
                 "CTR"        : '点击率'
             }

4.8 广告

4.8.1 获得N级页面广告信息
   URI: https://192.168.1.210/o2b/v1.0.0/adSense/$channel/$n

   输出：
              {
		ads_level_01:[[$code,$image],...],
                ads_level_02:[$code,name,$description,$imagelarge,$starttime,$endtime,$statusCode,$status,
			     $totalTopic,$totalFollow,$totalSold,$totalAmount,],...]
              }

   例1：获得主页面1级页面广告
   URI: https://192.168.1.210/o2b/v1.0.0/adSense/main/1

   例2：获得产品频道二级页面广告
   URI: https://192.168.1.210/o2b/v1.0.0/adSense/product/2

   例3：获得圈子频道三级页面广告
   URI: https://192.168.1.210/o2b/v1.0.0/adSense/groups/3


4.9 圈子
4.9.1 圈子类别
URI: https://192.168.1.210/o2b/v1.0.0/group/attribute
输入：
     http header：Authorization
     方法:get 

输出：
{
     "status": [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
     "category" : [ ["描述":"代码"],["描述":"代码"],...["描述":"代码"] ], 
}
 
4.9.2 创建圈子
URI: https://192.168.1.210/o2b/v1.0.0/group
输入：
     http header：Authorization
     方法:POST 
     参数:
     {
       "name" : "圈子名称",
       "desc" : "圈子描述",
       "cat"  : "圈子分类Code",
       "pwd"  : "圈子私有密码"
     }
输出：http status : 201
     {
       'group'   :  '圈子名称',
       'groupid' :  '圈子id'
     }

4.9.3 管理圈子
URI: https://192.168.1.210/o2b/v1.0.0/group
输入：
     http header：Authorization
     方法:patch 
     {
       "gid" : "圈子id",
       "opt" : "行为码",        #圈子管理者的行为码为：open|clsoe|pause|nopwd
     }
     
输出：http status : 201
注：只有圈子的创建者可以管理圈子
行为码说明：
   open  - 将close状态的圈子开启
   close - 关闭圈子（关闭圈子即冻结，非解散圈子，指不准许用户加入该圈子，也不准许圈子里的用户新增、删除、更改帖子）
   pause - 暂停新用户的加入
   nopwd - 非私有圈子
     

4.9.4 用户加入圈子
URI: https://192.168.1.210/o2b/v1.0.0/group/$gid
输入：
     http header：Authorization
     方法:post
输出：http status : 201
{
  "id"         : 圈子id,
  "name"       : "圈子名称",
  "membership" : 圈子成员数量
}

4.9.5 用户退出圈子
URI: https://192.168.1.210/o2b/v1.0.0/group/$gid
输入：
     http header：Authorization
     方法:delete
输出：http status : 201
{
  "id"         : 圈子id,
  "name"       : "圈子名称",
  "membership" : 圈子成员数量
}

4.9.6 我的圈子
URI: https://192.168.1.210/o2b/v1.0.0/user/group
输入：
     http header：Authorization
     方法:get
输出：http status : 201
{
  "id"         : 圈子id,
  "name"       : "圈子名称",
  "membership" : 圈子成员数量
}



4.10 用户
4.10.1 查看用户信息
URI: https://192.168.1.210/o2b/v1.0.0/user/info
输入：
     http header：Authorization
     方法:get
输出：     参数:
     {
        "nickname"   : "昵称",
	"heard_icon" : "头像文件名",
	"my_group"   : "",
	"join_group" : ""
     }


4.10.2 上传用户头像
URI: https://192.168.1.210/o2b/v1.0.0/user/header
输入：
     http header：Authorization
     方法:post
     参数:
        type        = "header"
	picture     = "文件名"  (类型为 file)
     
输出： http status : 201
{
"path":"文件所在的路径",
"filename": "文件名"
}
  


4.10.3 用户变更密码
URI: https://192.168.1.210/o2b/v1.0.0/user/info/pmssmed
输入：
     http header：Authorization
     方法:patch
     参数:
     {
        "oldPwd" : "原密码",
	"newPwd" : "新密码"
     }
输出： http status : 204


4.10.4 绑定手机


4.10.5. （我的关注 - 产品）列出用户的所有关注产品
URI: https://192.168.1.210/o2b/v1.0.0/user/product/follow
输入：
     http header：Authorization
     方法:GET
     参数:
输出： http status : 200
{
 product : [$pid,$code,$categoryCode,$name,$image,$starttime,$endTime,$statusCode,$status,
                            $totalTopic,$totalFollow,$totalSold,$totalAmount)],...]
}


4.11 系统服务

4.11.1 文件上传
URI: https://192.168.1.210/o2b/v1.0.0/service/uploadfile
输入：
     http header：Authorization
     方法:post
     参数:
     
        type         = "图像归属类型",
	code         = "编码",
	orderid      = "订单号",
	groupid      = "圈子id"
   

限制 : 图片最大不能超过4M

输出： http status : 201
{
"path":"文件所在的路径",
"filename": "文件名"
}
  
实际输出文件名前面有:"tmp_"头，为临时文件，待文本信息正时提交后，自动去掉'tmp_'头成为正式文件
注： type 图像归属类型 ： header | prodcut.banner | prodcut.large | prodcut.medium | prodcut.small | order.returns |  group
    code 产品编码     : 当类型是 header 或 groupid  时为空 ''
                      当类型是 prodcut.banner|large|medium|small   时为 product 的产品编码
	             当类型是 order.returns 时为 product 的产品编码
    order_id 订单id  : 当类型为 order.returns 有效
    groupid  圈子id  : 当类型为 group时有效		  
    


5. API 说明
URI: https://192.168.1.210/o2b/v1.0.0/apis
输入：
     方法:get
     参数:
     
        n         = "当前节点",
	f         = "父节点",

输出： http status : 200

{
[[$id,$node,$fatherNode,$URI,$name,$description,$httpMethod,$inputParameter,$inputData,$outputStatus,$outData,$comment],
 ...,
 ]
}

注： 不加n,f参数时只列出主节点
